---
import { getLangFromUrl } from '../../i18n/utils';

const currentLang = getLangFromUrl(Astro.url);
---

<div class="section-animation" data-lang={currentLang}>
  <slot />
</div>

<style>
  .section-animation {
    animation: fadeInUp 0.6s ease-out;
  }
  
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .section-animation[data-lang="es"],
  .section-animation[data-lang="en"] {
    animation: languageChange 0.8s ease-out;
  }
  
  @keyframes languageChange {
    0% {
      opacity: 0;
      transform: translateY(20px) scale(0.98);
    }
    50% {
      opacity: 0.5;
      transform: translateY(10px) scale(0.99);
    }
    100% {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }
</style>

<script>
  let currentLang = '${currentLang}';
  
  function animateSections() {
    const sections = document.querySelectorAll('.section-animation');
    sections.forEach((section, index) => {
      const sectionElement = section as HTMLElement;
      sectionElement.style.animation = 'none';
      sectionElement.offsetHeight;
      sectionElement.style.animation = `languageChange 0.8s ease-out ${index * 0.1}s`;
    });
  }
  
  let lastUrl = location.href;
  new MutationObserver(() => {
    const url = location.href;
    if (url !== lastUrl) {
      lastUrl = url;
      const newLang = url.split('/')[1];
      if (newLang && newLang !== currentLang && (newLang === 'es' || newLang === 'en')) {
        currentLang = newLang;
        document.querySelectorAll('.section-animation').forEach(section => {
          section.setAttribute('data-lang', newLang);
        });
        setTimeout(animateSections, 100);
      }
    }
  }).observe(document, { subtree: true, childList: true });
</script>
