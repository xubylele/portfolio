---
import { useTranslations, getLangFromUrl } from '../../i18n/utils';
import LanguageSelector from './LanguageSelector.astro';

const currentLang = getLangFromUrl(Astro.url);
const t = useTranslations(currentLang);

const menuItems = [
  {
    label: t('nav.experience'),
    href: '#experiences',
  },
  {
    label: t('nav.freelance'),
    href: '#freelance',
  },
  {
    label: t('nav.projects'),
    href: '#projects',
  },
  {
    label: t('nav.about'),
    href: '#about',
  },
  {
    label: t('nav.contact'),
    href: '#contact',
  },
];
---

<nav class='fixed top-0 left-0 right-0 z-50 bg-[#4b1e3d]/30 backdrop-blur-sm'>
  <div
    class='max-w-screen-xl mx-auto px-4 flex items-center justify-between h-12'
  >
    <button
      id='navbar-toggle'
      class='md:hidden text-white focus:outline-none'
    >
      <i class='fa-solid fa-bars w-6 h-6'></i>
    </button>
    
    <ul
      id='navbar-menu'
      class='flex-col md:flex-row md:flex hidden md:gap-8 gap-4 absolute md:static top-12 left-0 w-full md:w-auto bg-[#4b1e3d]/90 md:bg-transparent px-4 py-4 md:p-0 transition-all'
    >
      {
        menuItems.map((item) => (
          <li>
            <a
              href={item.href}
              class='text-white/80 hover:text-white transition-colors text-sm font-medium nav-link'
              data-section={item.href.substring(1)}
            >
              {item.label}
            </a>
          </li>
        ))
      }
    </ul>
    
    <div class="hidden md:block">
      <LanguageSelector id="language-selector-desktop" />
    </div>
    
    <div class="md:hidden">
      <LanguageSelector id="language-selector-mobile" />
    </div>
  </div>
</nav>
<script>
  const toggle = document.getElementById('navbar-toggle');
  const menu = document.getElementById('navbar-menu');
  toggle?.addEventListener('click', () => {
    menu?.classList.toggle('hidden');
  });
  window.addEventListener('resize', () => {
    if (window.innerWidth >= 768) {
      menu?.classList.remove('hidden');
    } else {
      menu?.classList.add('hidden');
    }
  });
</script>
<style>
  @media (min-width: 768px) {
    #navbar-menu {
      display: flex !important;
      position: static !important;
      background: transparent !important;
      padding: 0 !important;
      flex-direction: row !important;
    }
  }
</style>

<script>
  const sections = document.querySelectorAll('section[id]');
  const navLinks = document.querySelectorAll('.nav-link');

  const activateNavLink = (id: string) => {
    navLinks.forEach((link) => {
      const section = link.getAttribute('data-section');
      if (section === id) {
        link.classList.add('active', 'text-[#f6ea5d]');
        link.classList.remove('text-white/80');
      } else {
        link.classList.remove('active', 'text-[#f6ea5d]');
        link.classList.add('text-white/80');
      }
    });
  };

  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          activateNavLink(entry.target.id);
        }
      });
    },
    {
      rootMargin: '-50% 0px',
      threshold: 0,
    },
  );

  sections.forEach((section) => {
    observer.observe(section);
  });

  document.querySelectorAll('nav a[href^="#"]').forEach((anchor) => {
    anchor.addEventListener('click', function (this: HTMLAnchorElement, e) {
      e.preventDefault();
      const href = this.getAttribute('href');
      if (href) {
        document.querySelector(href)?.scrollIntoView({
          behavior: 'smooth',
          block: 'start',
        });
        history.pushState(null, '', href);
      }
    });
  });

  window.addEventListener('load', () => {
    const hash = window.location.hash.substring(1) || 'welcome';
    activateNavLink(hash);
  });
</script>

<style>
  .nav-link {
    position: relative;
  }

  .nav-link.active::after {
    content: '';
    position: absolute;
    bottom: -4px;
    left: 0;
    width: 100%;
    height: 2px;
    background-color: #f6ea5d;
    transform: scaleX(1);
    transition: transform 0.3s ease;
  }

  .nav-link:not(.active)::after {
    content: '';
    position: absolute;
    bottom: -4px;
    left: 0;
    width: 100%;
    height: 2px;
    background-color: #f6ea5d;
    transform: scaleX(0);
    transition: transform 0.3s ease;
  }

  .nav-link:hover::after {
    transform: scaleX(1);
  }
</style>
